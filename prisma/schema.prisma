generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id
  name        String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  belongsToId String
  User        User     @relation(fields: [belongsToId], references: [id])
  Update      Update[]

  @@unique([id, belongsToId])
}

model Update {
  id           String         @id
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  title        String         @db.VarChar(255)
  body         String
  status       UPDATE_STATUS  @default(IN_PROGRESS)
  version      String?
  asset        String
  productId    String
  Product      Product        @relation(fields: [productId], references: [id])
  UpdatePoints UpdatePoints[]
}

model UpdatePoints {
  id          String   @id
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  name        String   @db.VarChar(255)
  description String
  updateId    String
  Update      Update   @relation(fields: [updateId], references: [id])
}

model User {
  id        String    @id
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  Product   Product[]
}

enum UPDATE_STATUS {
  IN_PROGRESS
  LIVE
  DEPRECATED
  ARCHIVED
}

// This is a Prisma schema file that defines the data model for an issue tracker application.

model Issue {
  id          Int         @id @default(autoincrement())
  title       String      @db.VarChar(255)
  description String      @db.VarChar(255)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  status      IssueStatus @default(IN_PROGRESS)
}

enum IssueStatus {
  OPEN
  IN_PROGRESS
  CLOSED
}
